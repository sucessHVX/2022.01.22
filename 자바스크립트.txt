자바스크립트는 동적인 웹 페이지를 만들어줌
html, css를 동적으로 제어한다.

자바스크립트가 브라우저에서 하는일
1. html 페이지 변경하기 및 html 태그와 콘텐츠 추가 및 제거
2. css 및 html 태그의 스타일 변경
3. 사용자와의 상호작용, 폼 유효성 검증
4. 마우스와 키보드 이벤트에 대한 스크립트 실행
5. 웹 브라우저 제어, 쿠키등의 설정과 조회
6. Ajax 기술 이용하여 웹 서버와 통신
7. 동적인 효과(이미지 롤 오버, 상태 표시줄에 문자열 표시 등)
8. 웹 사이트의 기능적인 작업(쿠키처리, 새로운 윈도우 열기 등)

제이쿼리 : jQuery는 자바스크립트의 생산성을 향상시켜 주는 자바스크립트 라이브러리로,
자바 스크립트를 좀더 쉽게 사용하기 위해 만들어짐
홈페이지를 만들때 자바스크립트가 연필과 지우개를 번갈아가면서 사용하는 거라면
jQuery는 지우개가 달린 연필을 사용하는 것과 같다.
자바스크립트의 코드는 복잡하지만 jQuery는 좀더 직관적이며 짧고 단순하다
또한 가장 큰 강점인 멀티 브라우저 지원 기능을 가지고 있다.
이는 각기 다른 브라우저 엔진을 가지고 있는 다양한 브라우저에서 사용방법이 다른 스크립트를 하나로
사용할 수 있게 해주는 기능이다. 
jQuery는 효율적인 코드 작업을 하기위해 가장 많이 사용되는 라이브러리

제이쿼리 주요특징
제이쿼리 체인 : 현재 선택된 요소에 제이쿼리 메소드를 끝없이 연결하여 적용할 수 있게 하는 기능
각 메소드는 자기 자신을 반환하기 때문에 스크립트를 통해 연속적으로 동적인 제어 가능
예를 들어 숨겨져있던 태그를 보이게 하고 태그안의 텍스트를 변경할 경우
$("div").show().text("변경할 텍스트")      와같이 이어서 사용

트래버싱 : 체인의 대상을 바꿔가면서 체인을 계속 연장할 수 있는 기능

이벤트 : 웹브라우저에서 일어나는 사건을 의미. ex) 마우스이동, 클릭, 타이핑 등

애니메이션 : 소스한줄로 플래시를 대체할만한 애니메이션 기능을 만들 수 있다.

제이쿼리만 공부하는 것이 아니라 제이쿼리의 기반인 자바스크립트 공부를 해야한다.



Ajax : 자원과 시간 낭비를 막아줌

비동기식 : 여러가지 일이 동시에 발생한다는 것

Ajax는 화면을 갱신하지 않고 서버로 부터 데이터를 가져온다
예를들면 회원가입할때 중복체크하는 경우 사용

많은 문법을 배우고 습득했다고 프로그래밍을 잘하는 것은 아니다.
프로그래밍 처리과정에 대한 코드의 동작을 이해해야한다.
이를 이해하려면 많은 시행착오를 거치고 다양한 연습을 통해
문법 경험을 쌓아야 한다.
프로그래밍을 하기 위해서는 창의성과 노력이 겸비되어야 한다.
즉 코드를 많이 작성해 보고 작성한 코드를 응용해서 새로운 코드를
만들어 보아야 한다.
프로그래머 또는 웹 퍼블리셔들이 이러한 일들을 염두하고
프로그래밍 한다면 웹사용자들은 더 좋은 페이지를 경험하게 될거다.