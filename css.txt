css : 정보를 시각화하여 전달하면 한눈에 정보를 파악할 수 있다.
작성하려는 html웹문서를 시각화하기 위해 웹 상에서 약속된 언어

웹 문서로 정보를 전달하기 위해 html 언어로 마크업하여 웹 브라우저에 표현.
뼈대가 되는 표현이 html이면 시각적인 표현은 css

css를 사용하면 구조와 디자인을 구분하여 사이트의 전체 스타일을 손쉽게 제어할 수 있다.
즉 디자인 작업을 할때 html부분은 손을 대지 않고 css부분만 작성하고 수정.
또한 웹 사이트의 스타일을 일관성 있게 만들어 그에 따른 유지보수도 쉽게할 수 있다.

각각의 브라우저들은 서로 다른 렌더링 방식을 가지고 있다.
브라우저 업체마다 다른 브라우저 엔진이 css를 표현하기 때문에
표준에 대한 지원율도 차이를 보인다.
이를 보완하고자 웹페이지를 만들면서 모든 브라우저에 페이지가 동일하게 보이도록
css에 모든 태그의 기본스타일을 지우고 각 태그를 초기화 시킨다.
즉 각 브라우저의 기본 스타일을 지우는 것인데, 이를 css 초기화 라고 한다.

css초기화를 사용하면 브라우저 간 세세한 디자인의 표현 차이를 없애고 작성된 스타일을
페이지에 공통으로 적용시켜 사용자가 어떤 브라우저에 접속해도 동일한 페이지를 볼 수 있다.

css 초기화 스타일을 적용하는 방법은 일반적으로
마진과 패딩등을 0으로 설정하여 css를 재설정한다.
필요한 스타일을 자신이 만들어 사용하거나 이미 만들어진
css를 가져와 사용한다.

실무에서 웹 퍼블리셔들은 각자 스타일에 맞게 css를 미리 설정해둔 기본파일을 가지고 있다.
웹 퍼블리셔마다 추구하는 스타일이 따로 있고 만드는 웹 페이지에 대해 기본스타일을
정의하는 것도 다르기 때문에 어떤 작업환경에서든 쉽게 변경할 수 있도록
미리 기본 설정 파일을 제작하여 가지고 있는 것이다.

다른 사람의 초기화 내용을 그대로 가져와서 사용하는 것을 시작점으로
자신의 스타일을 개발하여 내가 만드는 사이트에 맞게 초기화 파일을 제작하면 된다.

홈페이지를 만들때 웹 표준에 따라 올바른 태그를 사용하여 html을 작성하는 것도 중요하지만
기기에 따라 화면배치나 모양들이 다르게 표현되면 사용자에게 혼란을 줄 수 있다.
그렇기에 css초기화는 꼭 필요한 작업이다.

1. 박스 모델 이해하기
페이지의 모든 태그는 사각형 박스이다.
css와 html은 박스모델을 이해하는 것이 아주 중요하다.
레이아웃을 만들때 태그를 박스 형태라 생각하고 그 박스를 맞는 위치에 배치해야
원하는 디자인대로 페이지에 표현 가능.
브라우저 엔진 또한 각각의 요소를 박스로 표현한다.

박스모델을 이해하려면 태그가 어떤 속성의 요소로 되어있는지 알아야한다.
html 태그는 화면 전체를 사용하는 block, 내가 가지고 있는 만큼만 표현되는 inline,
css의 display 속성값으로 변경할 수 있는 inline-block으로 구성됨.

block은 <div>, <section>, <acticle>, <aside>와 같이 주로 레이아웃을 결정하는 html sectionning태그로,
일반적으로 줄 바꿈이 되는 요소
block은 화면 전체를 사용하는데, 이것은 width와 관련이 있다.
즉 width를 따로 지정해 주어야한다.
block은 다른 block의 요소를 가질 수 있고 inline도 포함할 수 있다.

inline은 width를 지정하지 않아도 태그 안의 콘텐츠(텍스트, 이미지) 만큼 width를 차지하여
다음에 오는 태그는 줄 바꿈 되지 않고 기본 흐름상에서 오른쪽으로 붙는다.
사용자가 임의로 width/height 속성값 적용해도 반영되지 않는다.
inline에는 블록 요소가 올수 없고, inline은 포함 가능.

inline-block은 기본적으로 inline 형태지만 block 요소의 속성(넓이, 높이)을 사용할 때 쓰이는 속성이다.
즉 inline의 상자의 한면에 높이와 넓이를 지정하여 상자처럼 사용가능.

상자에 비유해보자면
inline은 상자가 아니라 상자의 한면, 따라서 면을 옆으로 확장할 수만 있고 상자 형태로는 사용 불가.
block은 상자이며, 이 상자안에는 모든것을 담을 수 있다.

실무에서는 태그를 단독으로 사용하기보다 태그안에 태그를 넣어서 사용하는 경우가 많다
그래서 규칙을 잘 따라야 한다.

css의 display 속성은 이 모든 값을 변경하여 지정할 수 있다.
실무에서는 디자인에 따라 속성을 변경하여 사용하기도 한다.
그러나 이것은 속성값의 변경, 즉 css로 표현하는 방식일뿐
태그의 성질까지는 변경하지 못한다.
예를 들어 <span>태그의 display 속성은 block으로 변경했다 하더라도
<span> 태그에는 <div> 태그가 들어갈 수 없다.

css로 변경하는 것은 디자인에 관련된 내용, 즉 꾸밈 요소로만 사용된다.
css로 변경되는 것은 콘텐츠가 표시하는 방식임을 기억하고 사용해야한다.

박스 모델의 여백을 지정하는 css의 속성은 마진과 패딩 두가지이다.
패딩은 박스 안쪽의 여백이고 박스모델에 포함되어 있지만,
마진은 박스의 바깥쪽 여백이고 박스모델에 포함되어있지않다.
패딩과 마진은 width의 크기가 다르다
패딩이 넓고 마진은 작다.

박스 크기의 기준을 정하는 건 box-sizing
이 속성은 박스의 크기를 어떤 기준으로 계산할지를 정하는 속성

예를 들어 패딩을 사용해 <div>태그의 width값이 100px가 되게하려면
패딩이 20px이면 <div>태그는 60으로 해야 맞다.

이것을 보완하기 위해 나온게 box-sizing
속성값으로 border-box와 content-box가 있다.
border-box로는 테두리를 포함한 크기를 지정할 수 있다.
content-box로는 실제 콘텐츠 영역만 지정할 수 있다.

css 선택자 : 가상클래스 선택자, 가상요소
css에서 속성값을 지정하기 위해 특정 태그를 지칭하기도 하고 class또는 id를 작성하여
속성값을 정의하기도 하는데, 이것을 선택자라 한다.
html태그를 기준으로 선택자를 만들어 스타일을 정의하는데, 태그의 특별한 상태를 지정하는
선택자를 가상 클래스 선택자라고 한다.

가상 클래스 선택자를 사용하면 태그에 불필요한 클래스를 넣지 않아도 되고,
특정 부분만 변경되는 경우에는 html을 따로 손대지 않고 css만으로도 변경할 수 있다.

:nth-child와 :nth-of-type은 공통적으로 요소를 선택하는 가상클래스선택자이다.
이 2가지는 실무에서 가장 많이 사용하는 가상 클래스 선택자이며 선택기준에 따라 사용하는 형태가 다르다.

:nth-child는 노드순서, 즉 태그의 단순 순서로 스타일이 적용됨
:nth-of-type는 같은 유형의 첫번째가 적용됨
그래서 새로운게 추가가 되버리면 child는 적용이 안되고 type은 적용 됨

가상요소 before, after는 주로 꾸밈을 위해 의미없는 태그를 추가하거나 태그 대신 가상으로 처리해 주는
유용한 css의 기능
의미없는 이미지를 넣거나 float를 해제할때도 사용.
before는 선택된 요소의 앞에 놓이고, after는 선택된 요소의 뒤에 놓인다.

이 가상요소는 html문서에 정보로 포함되지 않은 요소이므로 content 속성이 꼭 필요하다.
빈 값(content:"";)을 주고 단순히 꾸밈 요소로 사용하거나 특정 텍스트를 작성하여 사용하기도 한다.
즉 콘텐츠의 시각적인 효과를 위해 사용해야 할때 사용한다.

css의 가상 클래스 선택자와 가상 요소를 사용하면 html을 추가로 수정하지 않아도 가상 요소에 텍스트를
만들 수도 있고 이미지도 추가할 수 있다.
실무에서 디자인이 변경된 경우 혹은 추가해야 하는 이미지가 있는 경우에는 가상 클래스 선택자를 통해
특정 부분에만 스타일을 변경한다.
가상 요소를 이용하면 css를 확장성있게 사용할 수 있고 유지보수도 쉽다.

명확하게 분류하기 위해 가상클래스 선택자는 싱글콜론을 사용하고
가상요소도 싱글콜론으로 사용하는게 좋다.
가상요소는 더블콜론으로 쓰라고 지정했지만 브라우저마다 잘동작하게 하기 위해
싱글콜론으로 쓰자.

애니메이션
css로 디자인을 표현할 수 있는 방법 중에 애니메이션을 통해 콘텐츠를 표현하는 방법이 있다.
보통 애니메이션은 키프레임을 통해 구현하는 것이 일반적이지만 아주 간단하게 표현할 수도 있다.
css의 트렌지션 속성을 사용하는 방법이다.
transition 속성값에 시간을 지정하면 해당 요소가 일정 시간 동안 변화하게 되어
애니메이션 효과를 볼수있다.
예를 들어 사용자가 마우스 오버하여 배경색이 바뀌게 하고 싶을때 transition속성을 사용하면
일정시간에 걸쳐 배경색이 바뀌도록 설정할 수 있다.
또한 여러 요소에 애니메이션 효과를 사용할 경우 다양한 transition 속성을 사용하여 시간차를 두고 변화를
줄 수 도 있고 변화하는 함수를 지정하여 다양한 형태로 속성의 변화를 연출할 수도 있다

transform 속성은 좌표공간을 변형시켜 콘텐츠의 형태와 위치를 바꾸는 것이다.
평면 그리고 3d공간에서 이동, 회전, 크기변경, 기울임 등의 효과 나타냄.

태그형태를 변형하려면 태그의 중심점을 기준으로 설정된 방향으로 형태를 변형해야하는데
이때 transform 속성에서 사용하는 좌표는 다음과 같다.
좌표를 기준으로 방향이 지정되며 요소의 중심점에서 형태나 위치등을 변경한다.

트랜스폼 속성은 여러가지를 결합하여 효과들을 폭넓게 활용가능.
예를 들면 메뉴를 클릭하여 2depth의 메뉴효과를 얻고싶을때 transform:translate의 y축 값을
지정하면 메뉴 상단에서부터 자연스럽게 떨어지는 메뉴 효과를 얻을 수 있다.

플렉스 박스
html을 작성하고 css로 각 요소를 배치할때 float속상값으로 배치한다.
그러나 float는 원래 정렬을 위해 개발된 css속성이지 레이아웃을 위한 속성은 아니다.
html이 각 내용에 맞게 태그를 작성하도록 발전되면서 css또한 각 기능에 맞춰 개발되고 있다.

flex를 사용하면 기존에 만들었던 방식에 비해 아주 쉽고 간단하게 처리할 수 있다.
각 요소를 따로 계산하지 않아도 공간 분배를 알아서 해주므로 정렬 간격을 조절하기가 매우 쉽다.
각 요소간 정렬에 큰 강점이 있어 원하는 방향과 원하는 형태로 쉽게 정렬가능



